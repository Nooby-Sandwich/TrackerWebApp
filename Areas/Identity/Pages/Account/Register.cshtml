@page
@model TrackerWebApp.Areas.Identity.Pages.Account.RegisterModel
@{
    ViewData["Title"] = "Register";
}

<div class="min-vh-100 d-flex align-items-center justify-content-center bg-light">
  <div class="card shadow-lg" style="max-width: 480px; width:100%">
    <div class="card-body p-4">
      <h3 class="card-title text-center mb-4">Create your account</h3>

      <form method="post" class="needs-validation" novalidate>
        <div asp-validation-summary="All" class="alert alert-danger d-none"></div>

        <div class="mb-3">
          <label asp-for="Input.Email" class="form-label">Email address</label>
          <input asp-for="Input.Email" class="form-control form-control-lg" placeholder="you@example.com" required />
          <div class="invalid-feedback">
            A valid email is required.
          </div>
        </div>

        <div class="mb-3">
          <label asp-for="Input.Password" class="form-label">Password</label>
          <input asp-for="Input.Password" class="form-control form-control-lg" placeholder="At least 6 characters" />
          <div class="invalid-feedback">
            Your password must be at least 6 characters.
          </div>
        </div>

        <div class="mb-3">
          <label asp-for="Input.ConfirmPassword" class="form-label">Confirm password</label>
          <input asp-for="Input.ConfirmPassword" class="form-control form-control-lg" placeholder="Re-enter password" />
          <div class="invalid-feedback">
            Passwords must match.
          </div>
        </div>

        <button type="submit" class="btn btn-success btn-lg w-100 mb-3">Sign up</button>

        <div class="text-center small">
          Already have an account? <a asp-page="./Login">Log in</a>
        </div>
      </form>
    </div>
  </div>
</div>

@section Scripts {
  <script>
    // Bootstrap 5 client-side validation boilerplate
    (() => {
      'use strict';
      const forms = document.querySelectorAll('.needs-validation');
      Array.from(forms).forEach(form => {
        form.addEventListener('submit', e => {
          if (!form.checkValidity()) {
            e.preventDefault();
            e.stopPropagation();
          }
          form.classList.add('was-validated');
        }, false);
      });
    })();
  </script>
}
