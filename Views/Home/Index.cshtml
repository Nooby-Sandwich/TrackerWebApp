@model TrackerWebApp.Models.DashboardViewModel
@using TrackerWebApp.Models

@{
    ViewData["Title"] = "Financial Dashboard";
    var T = Model.Totals;
    var C = Model.ChartData;
}

<div class="row mb-4">
    @* Top 4 metrics *@
    <div class="col-6 col-md-3">
        <div class="card stat-card text-center">
            <div class="card-body">
                <small class="text-uppercase text-muted">Budgeted</small>
                <h4 class="mb-0">@T.TotalBudgeted.ToString("C")</h4>
            </div>
        </div>
    </div>
    <div class="col-6 col-md-3">
        <div class="card stat-card text-center">
            <div class="card-body">
                <small class="text-uppercase text-muted">Spent</small>
                <h4 class="mb-0">@T.TotalSpent.ToString("C")</h4>
            </div>
        </div>
    </div>
    <div class="col-6 col-md-3">
        <div class="card stat-card text-center">
            <div class="card-body">
                <small class="text-uppercase text-muted">Budgets</small>
                <h4 class="mb-0">@T.TotalBudgets</h4>
            </div>
        </div>
    </div>
    <div class="col-6 col-md-3">
        <div class="card stat-card text-center">
            <div class="card-body">
                <small class="text-uppercase text-muted">Transactions</small>
                <h4 class="mb-0">@T.TotalExpenses</h4>
            </div>
        </div>
    </div>
</div>

<div class="row mb-4">
    @* Quick-add forms (no more null-refs) *@
    <div class="col-lg-6 mb-3">
        <div class="card">
            <div class="card-header">Quick-Add Expense</div>
            <div class="card-body">
                <form asp-controller="Expenses"
                      asp-action="Create"
                      method="post"
                      class="row gx-2 gy-2">
                    <div class="col-6">
                        <input name="Description"
                               class="form-control"
                               placeholder="Description"
                               required />
                    </div>
                    <div class="col-3">
                        <select name="BudgetId"
                                class="form-select"
                                required>
                            <option value="">Category</option>
                            @foreach (var b in C.BudgetVsActual)
                            {
                                <option value="@b.Category">
                                    @b.Category
                                </option>
                            }
                        </select>
                    </div>
                    <div class="col-2">
                        <input name="Amount"
                               type="number"
                               step="0.01"
                               class="form-control"
                               placeholder="Amt"
                               required />
                    </div>
                    <div class="col-1">
                        <button class="btn btn-success w-100">
                            <i class="bi bi-plus-lg"></i>
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <div class="col-lg-6 mb-3">
        <div class="card">
            <div class="card-header">Quick-Add Budget</div>
            <div class="card-body">
                <form asp-controller="Budgets"
                      asp-action="Create"
                      method="post"
                      class="row gx-2 gy-2">
                    <div class="col-8">
                        <input name="Name"
                               class="form-control"
                               placeholder="Category"
                               required />
                    </div>
                    <div class="col-3">
                        <input name="Limit"
                               type="number"
                               step="0.01"
                               class="form-control"
                               placeholder="Limit"
                               required />
                    </div>
                    <div class="col-1">
                        <button class="btn btn-primary w-100">
                            <i class="bi bi-plus-lg"></i>
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<h5 class="mb-3">Visualizations</h5>
<div class="row g-4">
    <div class="col-md-6">
        <div class="card">
            <div class="card-header">Monthly Spend Breakdown</div>
            <div class="card-body">
                <canvas id="donutChart"></canvas>
            </div>
        </div>
    </div>

    <div class="col-md-6">
        <div class="card">
            <div class="card-header">Budget vs Actual</div>
            <div class="card-body">
                <canvas id="radarChart"></canvas>
            </div>
        </div>
    </div>

    <div class="col-md-6">
        <div class="card">
            <div class="card-header">Monthly Trend</div>
            <div class="card-body">
                <canvas id="lineChart"></canvas>
            </div>
        </div>
    </div>

    <div class="col-md-6">
        <div class="card">
            <div class="card-header">Top Categories</div>
            <div class="card-body">
                <canvas id="barChart"></canvas>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", () => {
          const palette = [
            "#1E3A8A",
            "#3B82F6",
            "#60A5FA",
            "#93C5FD",
            "#BFDBFE",
          ];

          // Donut
          new Chart("donutChart", {
            type: "doughnut",
            data: {
              labels: @Html.Raw(
           Json.Serialize(C.ByCategory.Select(c => c.Category))
         ),
              datasets: [
                {
                  data: @Html.Raw(
             Json.Serialize(C.ByCategory.Select(c => c.Total))
           ),
                  backgroundColor: palette,
                },
              ],
            },
            options: {
              cutout: "60%",
              plugins: { legend: { position: "bottom" } },
            },
          });

          // Radar
          new Chart("radarChart", {
            type: "radar",
            data: {
              labels: @Html.Raw(
           Json.Serialize(C.BudgetVsActual.Select(b => b.Category))
         ),
              datasets: [
                {
                  label: "Budgeted",
                  data: @Html.Raw(
             Json.Serialize(C.BudgetVsActual.Select(b => b.Budgeted))
           ),
                  borderColor: palette[1],
                  backgroundColor: "rgba(59,130,246,0.4)",
                },
                {
                  label: "Actual",
                  data: @Html.Raw(
             Json.Serialize(C.BudgetVsActual.Select(b => b.Actual))
           ),
                  borderColor: palette[4],
                  backgroundColor: "rgba(191,219,254,0.4)",
                },
              ],
            },
            options: {
              scales: { r: { beginAtZero: true } },
              plugins: { legend: { position: "top" } },
            },
          });

          // Line
          new Chart("lineChart", {
            type: "line",
            data: {
              labels: @Html.Raw(
           Json.Serialize(
             C.MonthlyTrend.Select(m => $"{m.Month}/{m.Year}")
           )
         ),
              datasets: [
                {
                  label: "₹ Spent",
                  data: @Html.Raw(
             Json.Serialize(C.MonthlyTrend.Select(m => m.Total))
           ),
                  borderColor: palette[2],
                  tension: 0.2,
                  fill: false,
                },
              ],
            },
            options: { scales: { y: { beginAtZero: true } } },
          });

          // Bar
          const top5 = C.ByCategory.sort((a, b) => b.Total - a.Total).slice(0, 5);
          new Chart("barChart", {
            type: "bar",
            data: {
              labels: top5.map((x) => x.Category),
              datasets: [
                {
                  label: "₹",
                  data: top5.map((x) => x.Total),
                  backgroundColor: palette[3],
                },
              ],
            },
            options: {
              indexAxis: "y",
              scales: { x: { beginAtZero: true } },
            },
          });
        });
    </script>
}
